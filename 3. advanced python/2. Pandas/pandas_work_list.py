# <h1>Pandas</h1>

# <h2>Темы:</h2>

# - Что такое pandas
# - Как использовать
# - Работа с файлами json формата
# - Обработка данных для получения нужных данных

# <h2>Задачи:</h2>

# 1. Изучить структуру данных файла data_df.json (data/data_df.json)
#     - Выделить главные колонки
#     - Описать что за файл и что в нем храниться (В виде краткого обзора текстом)
#     - Выдвинуть предположения для чего этот файл используется (В аудио или текстовом виде)

# 2. Выполнить загрузку файла data_df.json (data/data_df.json) в DataFrame и выполнить следующие задачи:
#     - Вывести первые 10 элементов в консоль и предоставить фото результата
#     - Получить медиану, максимальную и минимальную сумму по стоимости заказа
#     - Вывести все строки, у которых почта пользователя равна "yandex_main@yandex.ru"

#### 1. Изучить структуру данных файла data_df.json (data/data_df.json)
#////Гавыные колонки////
# 1. data - хранит в себе словари содержащие данные по проекту (тест) на CG.
# 2. dataset - набор данных
# 3. wow_project_id - id проекта
# 4. project_name - имя проекта
# 5. sync type - тип синхронизации 
# 6. init 
# 7. additional fields - дополнительные поля
# 8. data info - словарь, в котором хранится информация о данных файла

#////Описание файла////Для чего используется////
# Данный файл хранит в себе информацию о проекте с названием 'test'. Есть словарь data, где в качестве значения передается массив словарей, который хранят в себе данные по разным 
# пользователям (id проекта, id сделки, сумма платежа, почта пользователя, и т.д.)
# Так же в файле есть другие словари (которые я указывал в качестве основных колонок), наприме по значению словаря dataset(набор данных) могу судить, что проект состоит из тестов

# Файл может использоваться для отслеживания сроков платежей, отслеживания информации разных пользователей на сайте getrcoors, которые купили курс с id проекта 2

# 2. Выполнить загрузку файла data_df.json (data/data_df.json) в DataFrame и выполнить следующие задачи:
#     - Вывести первые 10 элементов в консоль и предоставить фото результата
#     - Получить медиану, максимальную и минимальную сумму по стоимости заказа
#     - Вывести все строки, у которых почта пользователя равна "yandex_main@yandex.ru"

import pandas as pd
import numpy as np
import json 

def read_json_to_df(name_file, columns: list[str]=[]):
    with open(name_file, mode='r', encoding='utf-8') as file_json:
        json_python = json.load(file_json)
    dict_result = {}
    for name_key in columns:
        dict_result = 
    return pd.DataFrame(json_python[columns])

# Вывести первые 10 элементов в консоль и предоставить фото результата

file_df = file_df.drop(file_df.index[99])
print(file_df)
# ////////////////////////////////////////////////////////////////////////////

# Получить медиану, максимальную и минимальную сумму по стоимости заказа
# sort_summ = sorted(file_df['pay_summ'])
# len_summ = len(sort_summ)//2
# median_summ = sort_summ[len_summ]
# median_summ_1 = sorted(file_df['pay_summ'])[]
median_summ = file_df['pay_summ'].median()
max_summ = file_df['pay_summ'].max()
min_summ = file_df['pay_summ'].min()
print('Максимальная сумма: ',max_summ)
print('Минимальная сумма: ',min_summ)
print('Медиана: ',median_summ)

# ////////////////////////////////////////////////////////////////////////////

# Вывести все строки, у которых почта пользователя равна "yandex_main@yandex.ru"

print(file_df[file_df['user_email'] == 'yandex_main@yandex.ru'])

# print(file_df['user_email'] == 'yandex_main@yandex.ru')

# ////////////////////////////////////////////////////////////////////////////
with open('data_df.json', mode='r', encoding='utf-8') as file_json:
    json_python = json.load(file_json)
file_df = pd.DataFrame(json_python['data'])
